CON
        _clkmode = xtal1 + pll16x                                               'Standard clock mode * crystal frequency = 80 MHz
        _xinfreq = 6_000_000


        LCD_RST = 5
        LCD_BLT = 6 
        LCD_SCL = 7
        LCD_SDA = 8

        ERC128128FS = %01111110


        
VAR
  byte LCD_X
  byte LCD_Y


OBJ

  I2C : "Basic_I2C_Driver_1.spin"

PUB MAIN | i

  I2C.Initialize(LCD_SCL, LCD_SDA)
  
  DIRA[LCD_BLT]~~
  DIRA[LCD_RST]~~

  OUTA[LCD_RST] := 0

  OUTA[LCD_BLT] := 0
  OUTA[LCD_RST] := 1

  I2C.WritePage(ERC128128FS, %0000_0000 | I2C#OneAddr, @LCD_INIT, 33)

  LCD_CLEAR

  LCD_MOVE(0, 0)
  LCD_STR(STRING("HELLO WORLD!!!"))
  LCD_MOVE(0, 3)
  LCD_STR(STRING("MACROFAB IS AWESOME"))

  repeat
    LCD_MOVE(10, 6)
    LCD_DEC(i)
    i++
    if(i > 9)
      i := 0
    waitcnt(cnt+clkfreq/2)
      

  repeat

PUB LCD_STR(STRINGPTR) | temp, i

  REPEAT STRSIZE(STRINGPTR)
    LCD_CHAR(BYTE[STRINGPTR++])

  return

PUB LCD_DEC(VALUE) | temp

  IF (VALUE < 0)
    -VALUE
    LCD_CHAR(STRING("-"))
        
  TEMP := 1_000_000_000

  REPEAT 10
    IF (VALUE => temp)
      LCD_CHAR(VALUE / temp + "0")
      VALUE //= temp
      RESULT~~
    ELSEIF (RESULT OR temp == 1)
      LCD_CHAR("0")
    temp /= 10

  return

PUB LCD_CHAR(CHAR) | i

  repeat i from 0 to 4
    LCD_CHAR_BUF[2*i] := LCD_CHAR_MAP[((CHAR-$20)*5) + i]
    LCD_CHAR_BUF[(2*i)+1] := LCD_CHAR_MAP[((CHAR-$20)*5) + i]

  I2C.WritePage(ERC128128FS, %0100_0000 | I2C#OneAddr, @LCD_CHAR_BUF, 12)
  
  return 

PUB LCD_MOVE(X,Y)
                                    
  LCD_X := X
  LCD_Y := Y

  LCD_MOVEDAT[0] := %10110000 | (Y & %00001111)
  LCD_MOVEDAT[1] := %00010000 | (((1 + (X * 6)) & %11110000 ) >> 4)
  LCD_MOVEDAT[2] := %00000000 | ((1 + (X * 6)) & %00001111 )

  I2C.WritePage(ERC128128FS, %0000_0000 | I2C#OneAddr, @LCD_MOVEDAT, 3)

  return

PUB LCD_CLEAR

  I2C.Start
  I2C.Write(ERC128128FS)
  I2C.Write(%0100_0000)

  repeat 4096
    I2C.Write(%0000_0000)

  I2C.Stop

  return

PUB LCD_FILL

  I2C.Start
  I2C.Write(ERC128128FS)
  I2C.Write(%0100_0000)

  repeat 4096
    I2C.Write(%1111_1111)

  I2C.Stop

  return
  
DAT

        LCD_INIT        byte    $38, $54, $AB, $66, $57, $48, $80, $27, $81, $1D, $2C, $2E, $2F, $93, $88, $00, $89, $00, $8A, $DD, $8B, $DD, $8C, $AA, $8D, $AA, $8E, $FF, $8F, $FF, $C8, %10100001, $AF

        LCD_DATA_TEST   byte    %00100110, %00100110, %01001001, %01001001, %01001001, %01001001, %01001001, %01001001, %00110010, %00110010, %00000000, %00000000, %01000001, %01000001, %01111111, %01111111, %01000001, %01000001

        LCD_MOVEDAT     byte    %00000000, %00000000, %00000000

        LCD_CHAR_BUF    byte    %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

        'http://mil.ufl.edu/4744/docs/lcdmanual/characterset.html

        LCD_CHAR_MAP    byte    %00000000, %00000000, %00000000, %00000000, %00000000,{ SPACE
                        }       %00000000, %00000000, %10011110, %00000000, %00000000,{ !
                        }       %00000000, %00001110, %00000000, %00001110, %00000000,{ "
                        }       %00101000, %11111110, %00101000, %11111110, %00101000,{ #
                        }       %01001000, %01010100, %11111110, %01010100, %00100100,{ $
                        }       %01000110, %00100110, %00010000, %11001000, %11000100,{ %
                        }       %01101100, %10010010, %10101010, %01000100, %10100000,{ &
                        }       %00000000, %00001010, %00000110, %00000000, %00000000,{ '
                        }       %00000000, %00111000, %01000100, %10000010, %00000000,{ (
                        }       %00000000, %10000010, %01000100, %00111000, %00000000,{ )
                        }       %00101000, %00010000, %01111100, %00010000, %00101000,{ *
                        }       %00010000, %00010000, %01111100, %00010000, %00010000,{ +
                        }       %00000000, %10100000, %01100000, %00000000, %00000000,{ ,
                        }       %00010000, %00010000, %00010000, %00010000, %00010000,{ -
                        }       %00000000, %11000000, %11000000, %00000000, %00000000,{ .
                        }       %01000000, %00100000, %00010000, %00001000, %00000100,{ /
                        }       %01111100, %10100010, %10010010, %10001010, %01111100,{ 0
                        }       %00000000, %10000100, %11111110, %10000000, %00000000,{ 1
                        }       %10000100, %11000010, %10100010, %10010010, %10001100,{ 2
                        }       %01000010, %10000010, %10001010, %10010110, %01100010,{ 3
                        }       %00110000, %00101000, %00100100, %11111110, %00100000,{ 4
                        }       %01001110, %10001010, %10001010, %10001010, %01110010,{ 5
                        }       %01111000, %10010100, %10010010, %10010010, %01100000,{ 6
                        }       %00000010, %11100010, %00010010, %00001010, %00000110,{ 7
                        }       %01101100, %10010010, %10010010, %10010010, %01101100,{ 8
                        }       %00001100, %10010010, %10010010, %01010010, %00111100,{ 9
                        }       %00000000, %01101100, %01101100, %00000000, %00000000,{ :
                        }       %00000000, %10101100, %01101100, %00000000, %00000000,{ ;
                        }       %00010000, %00101000, %01000100, %10000010, %00000000,{ <
                        }       %00101000, %00101000, %00101000, %00101000, %00101000,{ =
                        }       %00000000, %10000010, %01000100, %00101000, %00010000,{ >
                        }       %00000100, %00000010, %10100010, %00010010, %00001100,{ ?
                        }       %01100100, %10010010, %11110010, %10000010, %01111100,{ @
                        }       %11111100, %00100010, %00100010, %00100010, %11111100,{ A
                        }       %11111110, %10010010, %10010010, %10010010, %01101100,{ B
                        }       %01111100, %10000010, %10000010, %10000010, %01000100,{ C
                        }       %11111110, %10000010, %10000010, %01000100, %00111000,{ D
                        }       %11111110, %10010010, %10010010, %10010010, %10000010,{ E
                        }       %11111110, %00010010, %00010010, %00010010, %00000010,{ F
                        }       %01111100, %10000010, %10010010, %10010010, %11110100,{ G
                        }       %11111110, %00010000, %00010000, %00010000, %11111110,{ H
                        }       %00000000, %10000010, %11111110, %10000010, %00000000,{ I
                        }       %01000000, %10000000, %10000010, %01111110, %00000010,{ J
                        }       %11111110, %00010000, %00101000, %01000100, %10000010,{ K
                        }       %11111110, %10000000, %10000000, %10000000, %10000000,{ L
                        }       %11111110, %00000100, %00011000, %00000100, %11111110,{ M
                        }       %11111110, %00001000, %00010000, %00100000, %11111110,{ N
                        }       %01111100, %10000010, %10000010, %10000010, %01111110,{ O
                        }       %11111110, %00010010, %00010010, %00010010, %00000110,{ P
                        }       %01111100, %10000010, %10100010, %01000010, %10111100,{ Q
                        }       %11111110, %00010010, %00110010, %01010010, %10001100,{ R
                        }       %10001100, %10010010, %10010010, %10010010, %01100010,{ S
                        }       %00000010, %00000010, %11111110, %00000010, %00000010,{ T
                        }       %01111110, %10000000, %10000000, %10000000, %01111110,{ U
                        }       %00111110, %01000000, %10000000, %01000000, %00111110,{ V
                        }       %01111110, %10000000, %01110000, %10000000, %01111110,{ W
                        }       %11000110, %00101000, %00010000, %00101000, %11000110,{ X
                        }       %00001110, %00010000, %11100000, %00010000, %00001110,{ Y
                        }       %11000010, %10100010, %10010010, %10001010, %10000110,{ Z
                        }       %11111110, %10000010, %10000010, %00000000, %00000000,{ [
                        }       %00101010, %00101100, %11111000, %00101100, %00101010,{ \
                        }       %00000000, %10000000, %10000010, %11111110, %00000000,{ ]
                        }       %00001000, %00000100, %00000010, %00000100, %00001000,{ ^
                        }       %10000000, %10000000, %10000000, %10000000, %10000000,{ _
                        }       %00000000, %00000010, %00000100, %00001000, %00000000 { `
                        }